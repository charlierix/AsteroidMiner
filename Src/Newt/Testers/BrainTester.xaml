<Window x:Class="Game.Newt.Testers.BrainTester"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Brain Tester" ResizeMode="CanResizeWithGrip" Width="980" Height="817" Loaded="Window_Loaded" Closed="Window_Closed">

    <Window.Resources>
        <DataTemplate x:Key="expanderHeader">
            <TextBlock Text="{Binding}" FontSize="16" FontWeight="bold" Foreground="#D9D3C3"/>
        </DataTemplate>
        <Style TargetType="Expander">
            <Setter Property="HeaderTemplate" Value="{StaticResource expanderHeader}"/>
            <!--<Setter Property="ContentTemplate" Value="{StaticResource expanderContent}"/>-->
        </Style>

        <Style x:Key="controlsPanel" TargetType="Border">
            <Setter Property="Background" Value="#ADA693"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#3D352D"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>

        <Style x:Key="controlsPanelInExpander" TargetType="Border" BasedOn="{StaticResource controlsPanel}">
            <Setter Property="Margin" Value="4"/>
        </Style>

        <Style x:Key="controlPanelLabel" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="4,4,4,0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="#4C443C"/>
        </Style>

        <Style x:Key="inlineLabelLeft" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,3,0"/>
            <Setter Property="Foreground" Value="#4C443C"/>
        </Style>

        <Style x:Key="inlineLabelRight" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3,0,0,0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#4C443C"/>
        </Style>

        <Style x:Key="checkbox" TargetType="CheckBox">
            <Setter Property="Foreground" Value="#4C443C"/>
        </Style>
    </Window.Resources>

    <Grid Background="#544B4B">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Margin="12,12,0,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Background="#8C8677" Padding="4,4,1,4" Style="{StaticResource controlsPanel}">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Padding="0,0,3,0">
                    <StackPanel>
                        
                        <!-- Gravity Sensor -->
                        <Expander IsExpanded="False" Header="Gravity Sensor">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <UniformGrid Columns="2">
                                        <TextBlock Text="Size" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBox Name="txtGravitySensorSize" Text="1"/>

                                        <TextBlock Text="Density" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBox Name="txtGravNeuronDensity" Text="" TextChanged="txtGravNeuronDensity_TextChanged">
                                            <TextBox.ToolTip>
                                                <TextBlock>The number of neurons when size is 1<LineBreak/>(the count doesn't grow linear with size)</TextBlock>
                                            </TextBox.ToolTip>
                                        </TextBox>

                                        <TextBlock Text="Count" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBox Name="txtGravitySensorCount" Text="1"/>
                                    </UniformGrid>

                                    <TextBlock Text="Gravity" Margin="4,8,0,0" Style="{StaticResource controlPanelLabel}"/>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- NOTE: This extra stackpanel is so that the trackball will sit alone in this subtree.  Otherwise mouse capture will be affected -->
                                        <StackPanel Grid.Column="0" Name="grdGravityRotateViewport" Background="Transparent">
                                            <Viewport3D Name="_viewportGravityRotate" IsHitTestVisible="False" Width="120" Height="120">
                                                <Viewport3D.Camera>
                                                    <PerspectiveCamera x:Name="_cameraGravityRotate" Position="0,0,3" LookDirection="0,0,-1" UpDirection="0,1,0" FieldOfView="45"/>
                                                </Viewport3D.Camera>
                                                <ModelVisual3D>
                                                    <ModelVisual3D.Content>
                                                        <Model3DGroup>
                                                            <AmbientLight Color="DimGray" />
                                                            <DirectionalLight x:Name="_lightGravity1" Color="White" Direction="1,-1,-1" />
                                                            <!--<DirectionalLight x:Name="_lightGravity2" Color="#303030" Direction="-1,1,1" />-->
                                                        </Model3DGroup>
                                                    </ModelVisual3D.Content>
                                                </ModelVisual3D>
                                            </Viewport3D>
                                        </StackPanel>

                                        <Slider Grid.Column="1" Name="trkGravityStrength" Orientation="Vertical" Minimum="0" Maximum="50" Value="10" ValueChanged="trkGravityStrength_ValueChanged" />
                                    </Grid>

                                    <UniformGrid Columns="2" Margin="0,4,0,0">
                                        <TextBlock Text="Current" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBlock Name="lblCurrentGravity" Text="" Style="{StaticResource inlineLabelRight}"/>

                                        <TextBlock Text="Sensor Max" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBlock Name="lblSensorMagnitude" Text="" Style="{StaticResource inlineLabelRight}"/>
                                    </UniformGrid>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Brain -->
                        <Expander IsExpanded="False" Header="Brain">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <UniformGrid Columns="2">
                                        <TextBlock Text="Size" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBox Name="txtBrainSize" Text="1" VerticalContentAlignment="Center"/>

                                        <TextBlock Style="{StaticResource inlineLabelLeft}">Neuron<LineBreak/>Density</TextBlock>
                                        <TextBox Name="txtBrainNeuronDensity" Text="" VerticalContentAlignment="Center" TextChanged="txtBrainNeuronDensity_TextChanged">
                                            <TextBox.ToolTip>
                                                <TextBlock>The number of neurons when size is 1<LineBreak/>(the count doesn't grow linear with size)</TextBlock>
                                            </TextBox.ToolTip>
                                        </TextBox>

                                        <TextBlock Style="{StaticResource inlineLabelLeft}">Brain Chemical<LineBreak/>Density</TextBlock>
                                        <TextBox Name="txtBrainChemicalDensity" Text="" VerticalContentAlignment="Center" TextChanged="txtBrainChemicalDensity_TextChanged"/>

                                        <TextBlock Style="{StaticResource inlineLabelLeft}">Min Dist<LineBreak/>% of diameter</TextBlock>
                                        <TextBox Name="txtBrainNeuronMinDistPercent" Text="" VerticalContentAlignment="Center" TextChanged="txtBrainNeuronMinDistPercent_TextChanged"/>

                                        <TextBlock Text="Count" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBox Name="txtBrainCount" Text="1" VerticalContentAlignment="Center"/>
                                    </UniformGrid>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Thruster -->
                        <Expander IsExpanded="False" Header="Thruster">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <UniformGrid Columns="2">
                                        <TextBlock Text="Count" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBox Name="txtThrusterCount" Text="3"/>
                                    </UniformGrid>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Links -->
                        <Expander IsExpanded="False" Header="Links">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <TextBlock Text="Brain Settings" Style="{StaticResource controlPanelLabel}"/>

                                    <UniformGrid Columns="2" Margin="0,2,0,0">
                                        <TextBlock Text="internal mult" Style="{StaticResource inlineLabelLeft}"/>
                                        <TextBox Name="txtLinkBrainInternal" Text="" VerticalContentAlignment="Center" TextChanged="txtLinkBrainInternal_TextChanged"/>

                                        <TextBlock Style="{StaticResource inlineLabelLeft}">external mult<LineBreak/>from sensor</TextBlock>
                                        <TextBox Name="txtLinkBrainExternalFromSensor" VerticalContentAlignment="Center" Text="" TextChanged="txtLinkBrainExternalFromSensor_TextChanged"/>

                                        <TextBlock Style="{StaticResource inlineLabelLeft}">external mult<LineBreak/>from brain</TextBlock>
                                        <TextBox Name="txtLinkBrainExternalFromBrain" VerticalContentAlignment="Center" Text="" TextChanged="txtLinkBrainExternalFromBrain_TextChanged"/>

                                        <!--<TextBlock Style="{StaticResource inlineLabelLeft}"># external<LineBreak/>from manipulator</TextBlock>
                                        <TextBox Name="txtLinkBrainExternalFromManipulator" Text="" TextChanged=""/>-->
                                    </UniformGrid>

                                    <TextBlock Text="Thruster Settings" Margin="0,8,0,0" Style="{StaticResource controlPanelLabel}"/>

                                    <UniformGrid Columns="2" Margin="0,2,0,0">
                                        <TextBlock Style="{StaticResource inlineLabelLeft}">external mult<LineBreak/>from sensor</TextBlock>
                                        <TextBox Name="txtLinkThrusterExternalFromSensor" VerticalContentAlignment="Center" Text="" TextChanged="txtLinkThrusterExternalFromSensor_TextChanged"/>

                                        <TextBlock Style="{StaticResource inlineLabelLeft}">external mult<LineBreak/>from brain</TextBlock>
                                        <TextBox Name="txtLinkThrusterExternalFromBrain" VerticalContentAlignment="Center" Text="" TextChanged="txtLinkThrusterExternalFromBrain_TextChanged"/>
                                    </UniformGrid>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Mutate -->
                        <Expander IsExpanded="True" Header="Mutate">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <CheckBox IsEnabled="False" Name="chkMutateAddRemoveParts" Content="Add/Remove Parts" Style="{StaticResource checkbox}"/>
                                    <CheckBox IsChecked="True" Name="chkMutateChangeParts" Content="Change Parts" Style="{StaticResource checkbox}"/>
                                    <CheckBox IsChecked="True" Name="chkMutateChangeNeural" Content="Change Neural" Style="{StaticResource checkbox}"/>

                                    <CheckBox Name="chkMutateWriteToFile" Content="Write DNA to file" ToolTip="Stores old and new dna on the desktop so you can do file compares" Margin="0,8,0,0" Style="{StaticResource checkbox}"/>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Brain Operation -->
                        <Expander IsExpanded="False" Header="Brain Operation">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <ToggleButton Name="chkBrainRunning" Content="Running" IsChecked="True" Checked="chkBrainRunning_Checked" Unchecked="chkBrainRunning_Checked" />

                                    <Button Visibility="Collapsed" Name="btnAdvanceBrainOne" Content="Advance One" Margin="0,4,0,0" Click="btnAdvanceBrainOne_Click"/>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Misc Tests -->
                        <Expander Visibility="Visible" IsExpanded="False" Header="Misc Tests">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Name="btnMutate100ManyTimes" Content="Mutate 100 many times" Click="btnMutate100ManyTimes_Click"/>

                                    <Button Name="btnRandRange" Content="UtilityHelper.RandomRange" Margin="0,4,0,0" Click="btnRandRange_Click"/>

                                    <Button Name="btnMutateItemOptions" Content="Mutate ItemOptions" Margin="0,4,0,0" Click="btnMutateItemOptions_Click"/>

                                    <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                                        <Button Name="btnFuzzyLinkTest" Content="Fuzzy Link Test 1" Click="btnFuzzyLinkTest_Click"/>
                                        <TextBox Name="txtFuzzyLinkTestCount" Text="5" MinWidth="25" Margin="2,0,0,0"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                                        <StackPanel>
                                            <Button Name="btnFuzzyLinkTest2" Content="Fuzzy Link Test 2" Click="btnFuzzyLinkTest2_Click"/>
                                            <Button Name="btnFuzzyLinkTest2New" Content="Fuzzy Link Test 2" ToolTip="Uses ItemLinker.cs" Click="btnFuzzyLinkTest2New_Click"/>
                                        </StackPanel>
                                        <TextBox Name="txtFuzzyLinkTest2FromCount" Text="15" ToolTip="From Count" MinWidth="25" Margin="2,0,0,0"/>
                                        <TextBox Name="txtFuzzyLinkTest2ToCount" Text="15" ToolTip="To Count" MinWidth="25" Margin="2,0,0,0"/>
                                        <TextBox Name="txtFuzzyLinkTest2MaxIntermediate" Text="3" ToolTip="Max intermediate links" MinWidth="25" Margin="2,0,0,0"/>
                                        <TextBox Name="txtFuzzyLinkTest2MaxFinal" Text="3" ToolTip="Max final links" MinWidth="25" Margin="2,0,0,0"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                                        <Button Content="Fuzzy Link Test 3" Click="btnFuzzyLinkTest3_Click"/>
                                        <TextBox Name="txtFuzzyLinkTest3Points" Text="40" ToolTip="Points" MinWidth="25" Margin="2,0,0,0"/>
                                        <TextBox Name="txtFuzzyLinkTest3Links" Text="5" ToolTip="Initial Links" MinWidth="25" Margin="2,0,0,0"/>
                                        <TextBox Name="txtFuzzyLinkTest3MaxIntermediate" Text="3" ToolTip="Max intermediate links" MinWidth="25" Margin="2,0,0,0"/>
                                        <TextBox Name="txtFuzzyLinkTest3MaxFinal" Text="8" ToolTip="Max final links" MinWidth="25" Margin="2,0,0,0"/>
                                    </StackPanel>

                                    <UniformGrid Columns="2" Margin="0,4,0,0">
                                        <Button Name="btnPropsByPercent1" Content="PropsByPercent 1" Click="btnPropsByPercent1_Click"/>
                                        <Button Name="btnPropsByPercent2" Content="PropsByPercent 2" Click="btnPropsByPercent2_Click"/>
                                    </UniformGrid>
                                </StackPanel>
                            </Border>
                        </Expander>

                    </StackPanel>
                </ScrollViewer>
            </Border>

            <!-- Buttons -->
            <Border Grid.Row="1" Style="{StaticResource controlsPanel}" VerticalAlignment="Bottom" Padding="6" Margin="0,12,0,0">
                <StackPanel>
                    <Button Name="btnGravitySensor" Content="Create gravity sensor" Click="btnGravitySensor_Click" />
                    <Button Name="btnBrain" Content="Create brain" Margin="0,4,0,0" Click="btnBrain_Click" />
                    <Button Name="btnThrusters" Content="Create thrusters" Margin="0,4,0,0" Click="btnThrusters_Click"/>
                    <Button Name="btnLinks" Content="Create links" Margin="0,4,0,0" Click="btnLinks_Click" />

                    <Button Name="btnMutate" Content="Mutate" Margin="0,8,0,0" Click="btnMutate_Click"/>

                    <Button Name="btnClear" Content="Clear" Margin="0,8,0,0" Click="btnClear_Click"/>
                </StackPanel>
            </Border>

            <!-- Statistics -->
            <Border Grid.Row="2" Name="pnlStats" Style="{StaticResource controlsPanel}" VerticalAlignment="Bottom" Padding="6" Margin="0,12,0,0">
                <Border.Resources>
                    <Style x:Key="inlineHideLeft" TargetType="TextBlock" BasedOn="{StaticResource inlineLabelLeft}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="inlineHideRight" TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Resources>

                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="0" Grid.Row="0" Text="# Input" Style="{StaticResource inlineHideLeft}"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Name="lblInputNeuronCount" Text="0" Style="{StaticResource inlineHideRight}"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="# Brain" Style="{StaticResource inlineHideLeft}"/>
                        <TextBlock Grid.Column="1" Grid.Row="1" Name="lblBrainNeuronCount" Text="0" Style="{StaticResource inlineHideRight}"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="# Thrust" Style="{StaticResource inlineHideLeft}"/>
                        <TextBlock Grid.Column="1" Grid.Row="2" Name="lblThrustNeuronCount" Text="0" Style="{StaticResource inlineHideRight}"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="Total Neurons" Style="{StaticResource inlineLabelLeft}"/>
                        <TextBlock Grid.Column="1" Grid.Row="3" Name="lblTotalNeuronCount" Text="0"/>
                        <TextBlock Grid.Column="0" Grid.Row="4" Text="Total Links" Style="{StaticResource inlineLabelLeft}"/>
                        <TextBlock Grid.Column="1" Grid.Row="4" Name="lblTotalLinkCount" Text="0"/>
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>

        <!-- Viewports -->
        <Border Grid.Column="1" Grid.Row="0" Name="grdViewPort" BorderThickness="2" BorderBrush="#3D352D" CornerRadius="3" Margin="9,12,12,12">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#E8E1CF"/>
                        <GradientStop Offset=".6" Color="#DBD3BF"/>
                        <GradientStop Offset="1" Color="#D6CCB0"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Border.Background>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width=".5*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2.5*"/>
                    <RowDefinition Height=".5*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <!-- Neural Viewport -->
                <Border Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2" Name="pnlViewportNeural" Background="Transparent">
                    <Viewport3D Name="_viewportNeural" IsHitTestVisible="False">
                        <Viewport3D.Camera>
                            <PerspectiveCamera x:Name="_cameraNeural" Position="0,0,7" LookDirection="0,0,-1" UpDirection="0,1,0" FieldOfView="45"/>
                        </Viewport3D.Camera>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <Model3DGroup>
                                    <AmbientLight Color="DimGray" />
                                    <DirectionalLight Color="White" Direction="1,-1,-1" />
                                    <DirectionalLight Color="#C0C0C0" Direction="-1,1,1" />
                                </Model3DGroup>
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                    </Viewport3D>
                </Border>

                <!-- Standard Viewport -->
                <Border Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2" Name="pnlViewport" Background="Transparent">
                    <Viewport3D Name="_viewport" IsHitTestVisible="False">
                        <Viewport3D.Camera>
                            <PerspectiveCamera x:Name="_camera" Position="0,0,7.5" LookDirection="0,0,-1" UpDirection="0,1,0" FieldOfView="45"/>
                        </Viewport3D.Camera>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <Model3DGroup>
                                    <AmbientLight Color="DimGray" />
                                    <DirectionalLight Color="White" Direction="1,-1,-1" />
                                    <DirectionalLight Color="#303030" Direction="-1,1,1" />
                                </Model3DGroup>
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                    </Viewport3D>
                </Border>

            </Grid>
        </Border>
    </Grid>
</Window>
