<Window x:Class="Game.Newt.Testers.PotatoWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Potatoes" Width="950" Height="850" ResizeMode="CanResizeWithGrip" Loaded="Window_Loaded" Closed="Window_Closed">

    <!-- Color Theme -->
    <!-- From kuler.adobe.com (graze by paquinn) -->
    <!-- TODO: Figure out how to define constants in xaml -->
    <!-- DarkGray: #1F1F1E -->
    <!-- MedGray: #555455 -->
    <!-- LightGray: #959993 -->
    <!-- LightLightGray #B8BDB5 -->
    <!-- MedSlate: #4E554D -->
    <!-- DarkSlate: #2B3434 -->

    <Window.Resources>
        <DataTemplate x:Key="expanderHeader">
            <TextBlock Text="{Binding}" FontSize="15" FontWeight="bold" Foreground="#BDC2BA"/>
        </DataTemplate>
        <Style TargetType="Expander">
            <Setter Property="HeaderTemplate" Value="{StaticResource expanderHeader}"/>
            <!--<Setter Property="ContentTemplate" Value="{StaticResource expanderContent}"/>-->
        </Style>

        <Style x:Key="controlsPanel" TargetType="Border">
            <Setter Property="Background" Value="#959993"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#1F1F1E"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>

        <Style x:Key="controlsPanelInExpander" TargetType="Border" BasedOn="{StaticResource controlsPanel}">
            <Setter Property="Margin" Value="4"/>
        </Style>

        <Style x:Key="controlPanelLabel" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="4,4,4,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#2B3434"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="MinWidth" Value="118"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="2"/>
        </Style>

        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="2"/>
        </Style>
    </Window.Resources>

    <Grid Background="#555455">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Margin="12,12,0,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <!-- TODO: Change the colors of the expander buttons (the entire expander needs to be retemplated to do that) -->
            <Border Grid.Row="0" Background="#727571" BorderBrush="#1F1F1E" BorderThickness="1" CornerRadius="5" Padding="4,4,1,4">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Padding="0,0,3,0">
                    <StackPanel>
                        <!-- Point Cloud -->
                        <Expander Header="Point Cloud">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Content="Disk" Click="PointCloudDisk_Click"/>
                                    <Button Content="Ring (thick)" Click="PointCloudRingThick_Click"/>
                                    <Button Content="Ring" Click="PointCloudRing_Click"/>
                                    <Button Content="Sphere" Click="PointCloudSphere_Click"/>
                                    <Button Content="Sphere Shell (thick)" Click="PointCloudSphereShellThick_Click"/>
                                    <Button Content="Sphere Shell" Click="PointCloudSphereShell_Click"/>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Hull from points -->
                        <Expander IsExpanded="True" Header="Hull from Points">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Content="Circle 2D" Click="HullCircle2D_Click"/>
                                    <Button Content="Sphere 3D" Click="HullSphere3D_Click"/>

                                    <CheckBox Name="chkConcentricHulls" Content="Concentric hulls" Margin="2,5,2,2"/>
                                    <CheckBox Name="chkDrawDots" Content="Draw Dots" IsChecked="True"/>
                                    <CheckBox Name="chkDrawLines" Content="Draw Lines" IsChecked="True"/>
                                    <CheckBox Name="chkDrawNormals" Content="Draw Normals"/>
                                    <CheckBox Name="chkSoftFaces" Content="Soft Faces"/>
                                    <CheckBox Name="chkNearlyTransparent" Content="Nearly Transparent"/>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Points on Hull -->
                        <Expander IsExpanded="False" Header="Points on Hull">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Content="Triangle" Click="PointsOnHullTriangle_Click"/>
                                    <Button Content="Several Triangles" Click="PointsOnHullSeveralTriangles_Click"/>
                                    <Button Content="Random Hull" Click="PointsOnHullRandom_Click"/>
                                    <CheckBox Name="chkPointsDrawLines" Content="Draw Lines" IsChecked="False"/>
                                    <CheckBox Name="chkPointsDrawFaces" Content="Draw Faces" IsChecked="True"/>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Hull, Points, Hull -->
                        <Expander IsExpanded="False" Header="Hull, Points, Hull">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Content="Orig Attempt (fail)" Click="HPHOrigAttempt_Click"/>
                                    <Button Content="Preprocess Points (fail)" Click="HPHPreprocessPoints_Click"/>
                                    <Button Content="Detect Coplanar (fail)" Click="HPHDetectCoplanar_Click"/>
                                    <Button Content="Preprocess Points 2" Click="HPHPreprocessPoints2_Click"/>
                                    <CheckBox Name="chkHPHOrigLines" Content="Orig Lines" IsChecked="False"/>
                                    <CheckBox Name="chkHPHOrigFaces" Content="Orig Faces" IsChecked="True"/>
                                    <CheckBox Name="chkHPHOrigSoftFaces" Content="Orig Soft Faces" IsChecked="False"/>
                                    <CheckBox Name="chkHPHPoints" Content="Points" IsChecked="True"/>
                                    <CheckBox Name="chkHPHFinalLines" Content="Final Lines" IsChecked="False"/>
                                    <CheckBox Name="chkHPHFinalFaces" Content="Final Faces" IsChecked="True"/>
                                    <CheckBox Name="chkHPHFinalSoftFaces" Content="Final Soft Faces" IsChecked="False"/>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Icosahedron -->
                        <Expander IsExpanded="False" Header="Icosahedron">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Content="Icosahedron" Click="Icosahedron_Click"/>

                                    <Grid Margin="0,8,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Slider Grid.Column="0" Name="trkIcoRecurse" ToolTip="Recurse level" Minimum="0" Maximum="7" Value="0" SmallChange="1" VerticalAlignment="Center" ValueChanged="trkIcoRecurse_ValueChanged"/>
                                        <TextBlock Grid.Column="1" Name="lblIcoRecurse" Text="0" VerticalAlignment="Center" Margin="4,0,0,0"/>
                                    </Grid>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Slider Grid.Column="0" Name="trkIcoRadius" ToolTip="Radius" Minimum=".1" Maximum="20" Value="10" VerticalAlignment="Center" ValueChanged="trkIcoRadius_ValueChanged"/>
                                        <TextBlock Grid.Column="1" Name="lblIcoRadius" Text="10.0" VerticalAlignment="Center" Margin="4,0,0,0"/>
                                    </Grid>

                                    <Button Content="Spike Ball 1" Margin="0,20,0,0" Click="IcoSpike1_Click"/>
                                    <Button Content="Spike Ball 2" Click="IcoSpike2_Click"/>
                                    <Button Content="Spike Ball 3" Click="IcoSpike3_Click"/>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Slider Name="trkIcoSpikeRatio" ToolTip="Ratio" Minimum=".5" Maximum="1" Value=".75" VerticalAlignment="Center" ValueChanged="trkIcoSpikeRatio_ValueChanged"/>
                                        <TextBlock Grid.Column="1" Name="lblIcoSpikeRatio" Text="0.75" VerticalAlignment="Center" Margin="4,0,0,0"/>
                                    </Grid>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Slider Name="trkIcoSpikeRatioUnder" ToolTip="Ratio (under)" Minimum=".1" Maximum=".99" Value=".95" VerticalAlignment="Center" ValueChanged="trkIcoSpikeRatioUnder_ValueChanged"/>
                                        <TextBlock Grid.Column="1" Name="lblIcoSpikeRatioUnder" Text="0.95" VerticalAlignment="Center" Margin="4,0,0,0"/>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Other Polyhedra -->
                        <Expander IsExpanded="False" Header="Other Polyhedra">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Content="Tetrahedron" Click="Tetrahedron_Click"/>
                                    <Button Content="Rhombicuboctahedron" Click="Rhombicuboctahedron_Click"/>
                                    <Button Content="Icosidodecahedron" Click="Icosidodecahedron_Click"/>
                                    <Button Content="Truncated Icosidodecahedron" Click="TruncatedIcosidodecahedron_Click"/>
                                    <Button Content="Dodecahedron" Click="Dodecahedron_Click"/>
                                    <Button Content="Pentakis Dodecahedron" Click="PentakisDodecahedron_Click"/>
                                    <Button Content="Truncated Icosahedron" ToolTip="Soccer Ball" Click="TruncatedIcosahedron_Click"/>
                                    <Button Visibility="Collapsed" Content="Truncated Octahedron"/>
                                    <Button Visibility="Collapsed" Content="Deltoidal icositetrahedron"/>
                                    <Button Visibility="Collapsed" Content="Pentagonal hexecontahedron"/>
                                    <Button Visibility="Collapsed" Content="Truncated cube" ToolTip="add a bevel % as input"/>
                                    <Button Visibility="Collapsed" Content="Rhombic triacontahedron"/>
                                    <Button Visibility="Collapsed" Content="Rhombic dodecahedron" ToolTip="this has the advantage that it can be perfectly packed (no gaps)"/>
                                    <Button Visibility="Collapsed" Content="Elongated dodecahedron" ToolTip="this has the advantage that it can be perfectly packed (no gaps)"/>

                                    <CheckBox IsChecked="True" Name="chkPolyMajorLines" Content="Show major lines" Margin="2,8,2,2"/>
                                    <CheckBox Name="chkPolyRandomSize" Content="Random Size"/>
                                    <CheckBox Name="chkPolyLabelPoints" Content="Label Points"/>
                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Asteroid Voronoi -->
                        <Expander IsExpanded="False" Header="Asteroid Voronoi">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Content="New Asteroid" Click="NewAsteroid_Click"/>
                                    <Button Content="Single Triangle" Click="ShatterTriangle_Click"/>
                                    <Button Visibility="Collapsed" Content="test" Click="ShatterTest_Click"/>
                                    <Button Visibility="Collapsed" Content="test2" Click="ShatterTest2_Click"/>

                                    <!-- These were used to build the slice smooth and remove thin -->
                                    <StackPanel Visibility="Collapsed">
                                        <Button Visibility="Collapsed" Content="New Asteroid (divided 1)" Click="NewAsteroidDivided1_Click"/>
                                        <Button Content="New Asteroid (divided - debug)" Click="NewAsteroidDivided2Debug_Click"/>
                                        <Button Content="New Asteroid (divided)" Click="NewAsteroidDivided2_Click"/>
                                        <Button Content="New Asteroid (remove skinny 3)" Click="NewAsteroidRemoveSkinny3_Click"/>
                                        <Button Content="New Asteroid (remove skinny J)" Click="NewAsteroidRemoveSkinnyJ_Click"/>
                                        <Button Content="New Asteroid (remove add remove)" Click="NewAsteroidRemoveAddRemove_Click"/>
                                        <Button Content="New Asteroid (final)" Click="NewAsteroidFinal_Click"/>
                                    </StackPanel>

                                    <Button Content="Random Voronoi" Margin="2,8,2,2" Click="ShatterRandVoronoi_Click"/>
                                    <Button Content="Random Voronoi (far)" Click="ShatterRandVoronoiFar_Click"/>
                                    <Grid Margin="2,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="6"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Count" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                        <TextBox Grid.Column="2" Name="txtShatterVoronoiCount" Text="10" VerticalAlignment="Center"/>
                                    </Grid>

                                    <Button Content="Redraw" Margin="2,12,2,2" Click="ShatterRedraw_Click"/>
                                    <RadioButton Name="radShatterVoronoiLinesOnly" Content="Voronoi lines only"/>
                                    <RadioButton Name="radShatterTriangleByCtrlPoint" Content="Triangles by ctrl point"/>
                                    <RadioButton Visibility="Collapsed" Name="radShatterFirstCtrlPoint3" Content="First ctrl point (almost)"/>
                                    <RadioButton Visibility="Collapsed" Name="radShatterFirstMinimal3" Content="First minimal (almost)"/>
                                    <RadioButton Name="radShatterFirstCtrlPoint4" Content="First ctrl point"/>
                                    <RadioButton Name="radShatterFirstMinimal4" Content="First minimal"/>
                                    <RadioButton IsChecked="True" Name="radShatterFull" Content="Full"/>
                                    <RadioButton Name="radShatterFullExploded" Content="Full Exploded"/>

                                    <Button Visibility="Collapsed" Content="Test Chains 1" Margin="2,18,2,2" Click="ShatterChains_Click"/>
                                    <Button Visibility="Collapsed" Content="Test Chains 2" Click="ShatterChains2_Click"/>

                                </StackPanel>
                            </Border>
                        </Expander>

                        <!-- Random Tests -->
                        <Expander IsExpanded="False" Header="Random Tests">
                            <Border Style="{StaticResource controlsPanelInExpander}">
                                <StackPanel Margin="8">
                                    <Button Visibility="Collapsed" Content="Various Normals" Click="VariousNormals_Click"/>
                                    <Button Content="Outside Set" Click="OutsideSet_Click"/>
                                    <Button Content="Start 3D" Click="Start3D_Click"/>
                                    <Button Content="Fail 3D" Click="Fail3D_Click"/>
                                    <Button Visibility="Collapsed" Content="Attempt 6" Click="ThreeDAttempt6_Click"/>
                                    <Button Visibility="Collapsed" Click="ThreeDAttempt6FromFile_Click">
                                        <Button.Content>
                                            <TextBlock>Attempt 6<LineBreak/>From File</TextBlock>
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Name="lblTriangleReport" Text="" Visibility="Collapsed" Foreground="#2B3434"/>

                                    <Button Content="Coplanar 3D" Margin="0,8,0,0" Click="HullCoplanar3D_Click"/>
                                    <Grid Visibility="Collapsed">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Content="Max Steps"/>
                                        <TextBox Name="txtCoplanarMaxSteps" Grid.Column="1" Text="-1"/>
                                    </Grid>

                                </StackPanel>
                            </Border>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </Border>

            <!-- Num Points -->
            <Border Grid.Row="1" Style="{StaticResource controlsPanel}" VerticalAlignment="Bottom" Margin="0,12,0,0">
                <Grid>
                    <TextBlock Text="Number of Points" Style="{StaticResource controlPanelLabel}"/>

                    <StackPanel Margin="8,28,8,8" RadioButton.Checked="RadioRange_Checked" RadioButton.Unchecked="RadioRange_Checked">
                        <Slider Name="trkNumPoints" Minimum="4" Maximum="2500" Value="250" ValueChanged="trkNumPoints_ValueChanged" ToolTip="250"/>
                        <RadioButton Name="radSmallRange" Content="Small Range" Margin="2,6,2,2" ToolTip="4 to 100"/>
                        <RadioButton IsChecked="True" Name="radLargeRange" Content="Large Range" ToolTip="4 to 2,500"/>
                        <RadioButton Name="radHugeRange" Content="Huge Range" ToolTip="4 to 30,000"/>
                        <RadioButton Name="radExtremeRange" Content="Extreme Range" ToolTip="4 to 100,000"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <!-- Viewport -->
        <Border Grid.Column="1" Grid.Row="0" Name="grdViewPort" Background="#B8BDB5" BorderThickness="2" BorderBrush="#1F1F1E" CornerRadius="3" Margin="9,12,12,12" MouseDown="grdViewPort_MouseDown">
            <Grid IsHitTestVisible="False">
                <Viewport3D Name="_viewport" IsHitTestVisible="False">
                    <!-- Camera -->
                    <Viewport3D.Camera>
                        <PerspectiveCamera x:Name="_camera" Position="0,-25,25" LookDirection="0,1,-1" UpDirection="0,1,0" FieldOfView="45"/>
                    </Viewport3D.Camera>
                    <!-- Lights -->
                    <ModelVisual3D>
                        <ModelVisual3D.Content>
                            <Model3DGroup>
                                <AmbientLight Color="DimGray" />
                                <DirectionalLight Color="White" Direction="1,-1,-1" />
                                <DirectionalLight Color="#303030" Direction="-1,1,1" />
                            </Model3DGroup>
                        </ModelVisual3D.Content>
                    </ModelVisual3D>
                </Viewport3D>

                <!-- This holds 2D visuals (use it when labeling points) -->
                <Canvas Name="pnlVisuals2D" Cursor="None" IsHitTestVisible="False"/>
            </Grid>
        </Border>

    </Grid>
</Window>
